import{r as t,o,c as p,a as n,b as e,F as r,d as s,e as l}from"./app.88135d9f.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=n("h1",{id:"_404-\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_404-\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE","aria-hidden":"true"},"#"),s(" 404!!!\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE")],-1),k=n("h2",{id:"\u53EF\u80FD\u662F\u7DB2\u5740\u6539\u8B8A\u4E86\u3002",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53EF\u80FD\u662F\u7DB2\u5740\u6539\u8B8A\u4E86\u3002","aria-hidden":"true"},"#"),s(" \u53EF\u80FD\u662F\u7DB2\u5740\u6539\u8B8A\u4E86\u3002")],-1),b=n("blockquote",null,[n("p",null,"\u56E0\u70BA\u5B89\u88DD gitalk \u5B83\u662F\u7559\u8A00\u7CFB\u7D71 \u5229\u7528 github \u7684 issue tracker \u529F\u80FD\uFF0C\u5728\u540C\u6642\u6703\u65B0\u589E label \u56E0\u70BA github \u7684 labels \u9577\u5EA6\u4E0D\u80FD\u8D85\u904E 50 \u500B\u5B57\uFF0C\u6240\u4EE5\u6709\u4E9B\u6587\u7AE0\u7684\u7DB2\u5740\u8981\u6539\u77ED")],-1),d=n("p",null,[n("strong",null,"\u55AE\u7BC7")],-1),h={href:"https://dwatow.github.io/2018/12-29-webpack/action-url-loader-file-loader/",target:"_blank",rel:"noopener noreferrer"},_=s("\u5BE6\u6230 Webpack \u7684 file-loader \u548C url-loader"),g={href:"https://dwatow.github.io/2018/09-20-code-review-no-coding-style-worning/",target:"_blank",rel:"noopener noreferrer"},m=s("\u8B93 Code review \u518D\u4E5F\u4E0D\u6703\u51FA\u73FE Coding Style \u7684\u554F\u984C"),f={href:"https://dwatow.github.io/2018/03-25-vuejs/vue-cli-webpack-bootstrap/",target:"_blank",rel:"noopener noreferrer"},w=s("\u5728 Vue-cli \u6216 Webpack \u60F3\u4F7F\u7528 Bootstrap"),y={href:"https://dwatow.github.io/2018/02-17-iron-man-2018/summary-js-ecosystem/",target:"_blank",rel:"noopener noreferrer"},x=s("\u7D66\u60F3\u5B78 JS \u7684\u524D\u7AEF\u300CJS \u751F\u614B\u7CFB\u53CA\u9031\u908A\u5DE5\u5177\u6574\u7406\u300D\u5C0E\u8B80"),v={href:"https://dwatow.github.io/2018/02-12-iron-man-2018/know-browser-for-f2e/",target:"_blank",rel:"noopener noreferrer"},P=s("\u7D66\u524D\u7AEF\u7684\u300C\u4F86\u505A\u500B\u7DB2\u8DEF\u700F\u89BD\u5668\u5427\uFF01\u300D\u5C0E\u8B80"),C=n("p",null,[n("strong",null,"\u7CFB\u5217")],-1),q={href:"https://dwatow.github.io/tags/angularjs/",target:"_blank",rel:"noopener noreferrer"},j=s("AngularJS \u5168\u7CFB\u5217"),M={href:"/2019/01-02-angularjs/angularjs-lifecycle/",target:"_blank",rel:"noopener noreferrer"},S=s("AngularJS 1.5+ Component lifecycle"),A={href:"/2018/12-23-angularjs/angularjs-es6-class/",target:"_blank",rel:"noopener noreferrer"},E=s("AngularJS 1.5+ Component style with es6-class"),B={href:"/2018/12-06-angularjs/angularjs-with-webpack/",target:"_blank",rel:"noopener noreferrer"},F=s("AngularJS + Gulp \u2192 Webpack"),J={href:"https://dwatow.github.io/tags/facebook/",target:"_blank",rel:"noopener noreferrer"},V=s("Facebook \u5168\u7CFB\u5217"),N={href:"/2018/02-09-facebook/fb-web-login/",target:"_blank",rel:"noopener noreferrer"},D=s("Facebook \u7DB2\u9801\u767B\u5165"),H={href:"/2018/01-27-for-designer/messenger-design-doc/",target:"_blank",rel:"noopener noreferrer"},L=s("\u7D66\u975E\u5DE5\u7A0B\u4EBA\u54E1\u7684 Messager \u5F15\u5C0E\u624B\u518A"),T={href:"/2017/11-12-facebook/fb-develop-delete-app/",target:"_blank",rel:"noopener noreferrer"},W=s("\u522A\u9664 facebook developers \u7684 app"),G={href:"/2017/06-16-facebook/fb-messenger-chatbot-first/",target:"_blank",rel:"noopener noreferrer"},I=s("\u521D\u63A2 Facebook Messager \u804A\u5929\u6A5F\u5668\u4EBA"),O={href:"https://dwatow.github.io/tags/hexo/",target:"_blank",rel:"noopener noreferrer"},U=s("Hexo \u5168\u7CFB\u5217"),z={href:"https://dwatow.github.io/2019/01-03-hexo/hexo-backup-to-branch/",target:"_blank",rel:"noopener noreferrer"},K=s("Hexo \u5099\u4EFD md \u6A94"),Q={href:"https://dwatow.github.io/2018/02-07-hexo/hexo-open-graph/",target:"_blank",rel:"noopener noreferrer"},R=s("hexo \u52A0\u4E0A Open Graph"),X={href:"https://dwatow.github.io/2018/01-28-hexo/list-related-posts/",target:"_blank",rel:"noopener noreferrer"},Y=s("hexo \u52A0\u4E0A \u5B89\u5168\u7DB2 (\u6587\u7AE0\u63A8\u85A6)"),Z={href:"https://dwatow.github.io/2018/01-28-hexo/how-to-hexo-markdown-it-toc/",target:"_blank",rel:"noopener noreferrer"},$=s("markdown-it \u5982\u4F55\u9806\u5229\u4F7F\u7528 toc \u5728 hexo"),nn={href:"https://dwatow.github.io/2018/01-28-hexo/katex/",target:"_blank",rel:"noopener noreferrer"},sn=s("hexo \u52A0\u4E0A\u6578\u5B78\u5F0F MathJax"),an={href:"https://dwatow.github.io/2017/06-18-hexo/re-equip-hexo1/",target:"_blank",rel:"noopener noreferrer"},en=s("Hexo \u7814\u7A76\u7B46\u8A18 1"),tn={href:"https://dwatow.github.io/2017/06-18-hexo/github-emojis/",target:"_blank",rel:"noopener noreferrer"},on=s("hexo \u52A0\u4E0A github \u8868\u60C5\u7B26\u865F"),pn={href:"https://dwatow.github.io/2017/06-18-hexo/uml-sequence/",target:"_blank",rel:"noopener noreferrer"},rn=s("hexo \u52A0\u4E0A UML \u5FAA\u5E8F\u5716"),ln={href:"https://dwatow.github.io/2017/06-18-hexo/flow-chart/",target:"_blank",rel:"noopener noreferrer"},cn=s("hexo \u52A0\u4E0A\u6D41\u7A0B\u5716"),un={href:"https://dwatow.github.io/2017/06-18-hexo/test-hackmd/",target:"_blank",rel:"noopener noreferrer"},kn=s("\u6E2C\u8A66 hackmd \u652F\u63F4\u7684 markdown \u5BEB\u6CD5"),bn={href:"https://dwatow.github.io/categories/%E7%B5%A6%E5%B9%B3%E9%9D%A2%E8%A8%AD%E8%A8%88%E5%B8%AB%E7%9A%84/",target:"_blank",rel:"noopener noreferrer"},dn=s("\u7D66\u5E73\u9762\u8A2D\u8A08\u5E2B\u7684 \u7CFB\u5217"),hn={href:"https://dwatow.github.io/2018/01-27-for-designer/messenger-design-doc/",target:"_blank",rel:"noopener noreferrer"},_n=s("\u7D66\u975E\u5DE5\u7A0B\u4EBA\u54E1\u7684 Messager \u5F15\u5C0E\u624B\u518A"),gn={href:"https://dwatow.github.io/2017/06-29-for-designer/output-specifications/",target:"_blank",rel:"noopener noreferrer"},mn=s("\u51FA\u5C3A\u5BF8\u7A3F\uFF1F\u600E\u9EBC\u51FA\uFF1F"),fn={href:"https://dwatow.github.io/2017/06-29-for-designer/about-web-image/",target:"_blank",rel:"noopener noreferrer"},wn=s("\u51FA\u5716\uFF1F\u600E\u9EBC\u51FA\uFF1F"),yn={href:"https://dwatow.github.io/2017/06-29-for-designer/about-mobile-resolution/",target:"_blank",rel:"noopener noreferrer"},xn=s("\u5982\u4F55\u53D6\u5F97\u624B\u6A5F\u7248\u9762\u7684\u8A2D\u8A08\u89E3\u6790\u5EA6"),vn={href:"https://dwatow.github.io/2017/06-23-for-designer/talk_with_web_front_end/",target:"_blank",rel:"noopener noreferrer"},Pn=s("\u7DB2\u9801\u524D\u7AEF\u898F\u683C\u5EFA\u8B70"),Cn=l(`<p>\u9664\u6B64\u4E4B\u5916.... \u90A3\u5C31\u770B\u6211\u5E7E\u884C code \u5427!!</p><h2 id="\u4E00\u958B\u59CB-\u5B78\u4E86-c-\u3002" tabindex="-1"><a class="header-anchor" href="#\u4E00\u958B\u59CB-\u5B78\u4E86-c-\u3002" aria-hidden="true">#</a> \u4E00\u958B\u59CB\uFF0C\u5B78\u4E86 C++\u3002</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

using namespace std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;404!!\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE!!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5B78\u4E86\u7269\u4EF6\u5C0E\u5411" tabindex="-1"><a class="header-anchor" href="#\u5B78\u4E86\u7269\u4EF6\u5C0E\u5411" aria-hidden="true">#</a> \u5B78\u4E86\u7269\u4EF6\u5C0E\u5411....</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

using namespace std<span class="token punctuation">;</span>

class page <span class="token punctuation">{</span>
  string m_Message<span class="token punctuation">;</span>
public<span class="token operator">:</span>
  <span class="token function">page</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span> content<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">m_Message</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>

  string <span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> m_Message<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  page <span class="token function">p404</span><span class="token punctuation">(</span><span class="token string">&quot;404!!\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> p404<span class="token punctuation">.</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u5B78\u4E86-design-pattern" tabindex="-1"><a class="header-anchor" href="#\u5B78\u4E86-design-pattern" aria-hidden="true">#</a> \u5B78\u4E86 Design Pattern...</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

using namespace std<span class="token punctuation">;</span>

class Page<span class="token punctuation">;</span>
class Page404<span class="token punctuation">;</span>

template<span class="token operator">&lt;</span>typename T<span class="token operator">&gt;</span> Page<span class="token operator">*</span> <span class="token function">PageConstructorPtr</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span> m_StatusCode<span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token keyword">return</span> new <span class="token function">T</span><span class="token punctuation">(</span>m_StatusCode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment">//Factory</span>
class Factory <span class="token punctuation">{</span>
  <span class="token keyword">typedef</span> Page<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>PageConstructor<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  map<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> PageConstructor<span class="token operator">&gt;</span> m_PagesMap<span class="token punctuation">;</span>
public<span class="token operator">:</span>
  <span class="token function">Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m_PagesMap<span class="token punctuation">[</span><span class="token string">&quot;page404&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>PageConstructorPtr<span class="token operator">&lt;</span>Page404<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  Page<span class="token operator">*</span> <span class="token function">CreatePage</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span> StatusCode<span class="token punctuation">,</span> <span class="token keyword">const</span> string<span class="token operator">&amp;</span> Message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    PageConstructor pc <span class="token operator">=</span> m_PagesMap<span class="token punctuation">[</span>StatusCode<span class="token punctuation">]</span><span class="token punctuation">;</span>
    Page<span class="token operator">*</span> object <span class="token operator">=</span> <span class="token function">pc</span><span class="token punctuation">(</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> object<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//objects</span>
class Page <span class="token punctuation">{</span>
public<span class="token operator">:</span>
  virtual string <span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

class Page404 <span class="token operator">:</span> public Page <span class="token punctuation">{</span>
  <span class="token keyword">const</span> string m_Str<span class="token punctuation">;</span>
  string m_Message<span class="token punctuation">;</span>
public<span class="token operator">:</span>
  <span class="token function">Page404</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span> Content<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">m_Str</span><span class="token punctuation">(</span><span class="token string">&quot;404!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">m_Message</span><span class="token punctuation">(</span>Content<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  string <span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> m_Str <span class="token operator">+</span> m_Message<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//main program</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Factory factory<span class="token punctuation">;</span>
  Page <span class="token operator">*</span> p404 <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">CreatePage</span><span class="token punctuation">(</span><span class="token string">&quot;page404&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> p404<span class="token operator">-&gt;</span><span class="token function">Content</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h2 id="\u5B78\u524D\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u5B78\u524D\u7AEF" aria-hidden="true">#</a> \u5B78\u524D\u7AEF</h2><p>\u5B78 Javascript</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;404!!\u4F60\u8981\u627E\u7684\u9801\u9762\u9084\u6C92\u6709\u51FA\u73FE!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,10);function qn(jn,Mn){const a=t("ExternalLinkIcon");return o(),p(r,null,[u,k,b,d,n("ul",null,[n("li",null,[n("a",h,[_,e(a)])]),n("li",null,[n("a",g,[m,e(a)])]),n("li",null,[n("a",f,[w,e(a)])]),n("li",null,[n("a",y,[x,e(a)])]),n("li",null,[n("a",v,[P,e(a)])])]),C,n("ul",null,[n("li",null,[n("a",q,[j,e(a)]),n("ul",null,[n("li",null,[n("a",M,[S,e(a)])]),n("li",null,[n("a",A,[E,e(a)])]),n("li",null,[n("a",B,[F,e(a)])])])]),n("li",null,[n("a",J,[V,e(a)]),n("ul",null,[n("li",null,[n("a",N,[D,e(a)])]),n("li",null,[n("a",H,[L,e(a)])]),n("li",null,[n("a",T,[W,e(a)])]),n("li",null,[n("a",G,[I,e(a)])])])]),n("li",null,[n("a",O,[U,e(a)]),n("ul",null,[n("li",null,[n("a",z,[K,e(a)])]),n("li",null,[n("a",Q,[R,e(a)])]),n("li",null,[n("a",X,[Y,e(a)])]),n("li",null,[n("a",Z,[$,e(a)])]),n("li",null,[n("a",nn,[sn,e(a)])]),n("li",null,[n("a",an,[en,e(a)])]),n("li",null,[n("a",tn,[on,e(a)])]),n("li",null,[n("a",pn,[rn,e(a)])]),n("li",null,[n("a",ln,[cn,e(a)])]),n("li",null,[n("a",un,[kn,e(a)])])])]),n("li",null,[n("a",bn,[dn,e(a)]),n("ul",null,[n("li",null,[n("a",hn,[_n,e(a)])]),n("li",null,[n("a",gn,[mn,e(a)])]),n("li",null,[n("a",fn,[wn,e(a)])]),n("li",null,[n("a",yn,[xn,e(a)])]),n("li",null,[n("a",vn,[Pn,e(a)])])])])]),Cn],64)}var En=c(i,[["render",qn]]);export{En as default};
